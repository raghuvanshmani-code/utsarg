/**
 * @file Firestore Security Rules
 * @description This ruleset allows anyone to create, update, and delete data.
 *
 * Core Philosophy:
 *   This configuration is for prototyping purposes, allowing completely open access to the database.
 *   This is NOT suitable for production environments.
 *
 * Data Structure:
 *   The database contains collections for users, society metadata, clubs, volunteers, members,
 *   events, gallery items, fund transactions, and philanthropy activities.
 *
 * Key Security Decisions:
 *   All read and write access is granted to all users, regardless of authentication state.
 *   This bypasses all authentication and authorization checks.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to create, read, update, and delete user profiles.
     * @path /users/{userId}
     * @allow (create) Any user can create a profile with any data.
     * @allow (get) Any user can read any profile.
     * @allow (update) Any user can update any profile with any data.
     * @allow (delete) Any user can delete any profile.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete society metadata.
     * @path /society/meta
     * @allow (create) Any user can create the metadata document with any data.
     * @allow (get) Any user can read the metadata document.
     * @allow (update) Any user can update the metadata document with any data.
     * @allow (delete) Any user can delete the metadata document.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /society/meta {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete club data.
     * @path /clubs/{clubId}
     * @allow (create) Any user can create a club with any data.
     * @allow (get) Any user can read any club's data.
     * @allow (update) Any user can update any club's data with any data.
     * @allow (delete) Any user can delete any club.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /clubs/{clubId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete volunteer profiles.
     * @path /volunteers/{volunteerId}
     * @allow (create) Any user can create a volunteer profile with any data.
     * @allow (get) Any user can read any volunteer's profile.
     * @allow (update) Any user can update any volunteer's profile with any data.
     * @allow (delete) Any user can delete any volunteer's profile.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /volunteers/{volunteerId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete member profiles.
     * @path /members/{memberId}
     * @allow (create) Any user can create a member profile with any data.
     * @allow (get) Any user can read any member's profile.
     * @allow (update) Any user can update any member's profile with any data.
     * @allow (delete) Any user can delete any member's profile.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /members/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete event data.
     * @path /events/{eventId}
     * @allow (create) Any user can create an event with any data.
     * @allow (get) Any user can read any event's data.
     * @allow (update) Any user can update any event's data with any data.
     * @allow (delete) Any user can delete any event.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /events/{eventId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete gallery items.
     * @path /gallery/{galleryId}
     * @allow (create) Any user can create a gallery item with any data.
     * @allow (get) Any user can read any gallery item.
     * @allow (update) Any user can update any gallery item with any data.
     * @allow (delete) Any user can delete any gallery item.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /gallery/{galleryId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete fund transactions.
     * @path /funds/accounting/transactions/{transactionId}
     * @allow (create) Any user can create a transaction with any data.
     * @allow (get) Any user can read any transaction's data.
     * @allow (update) Any user can update any transaction's data with any data.
     * @allow (delete) Any user can delete any transaction.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /funds/accounting/transactions/{transactionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete philanthropy activities.
     * @path /philanthropy/{activityId}
     * @allow (create) Any user can create an activity with any data.
     * @allow (get) Any user can read any activity's data.
     * @allow (update) Any user can update any activity's data with any data.
     * @allow (delete) Any user can delete any activity.
     * @deny (none) There are no restrictions.
     * @principle Open access for prototyping.
     */
    match /philanthropy/{activityId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}
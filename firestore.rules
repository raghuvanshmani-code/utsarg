/**
 * @file Firestore Security Rules
 * @generated by Gemini
 * @version Prototype
 *
 * @Core Philosophy:
 * This ruleset configures the database for CRUD operations for anyone.
 *
 * @Data Structure:
 * The database contains collections for users, society metadata, clubs, volunteers,
 * members, events, gallery items, fund transactions, and philanthropy activities.
 *
 * @Key Security Decisions:
 *  - All read and write access are granted to everyone.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to create, read, update, and delete user profiles.
     * @path /users/{userId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete the society metadata document.
     * @path /society/meta
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /society/meta {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete club documents.
     * @path /clubs/{clubId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /clubs/{clubId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete volunteer documents.
     * @path /volunteers/{volunteerId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /volunteers/{volunteerId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete member documents.
     * @path /members/{memberId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /members/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete event documents.
     * @path /events/{eventId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /events/{eventId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete gallery item documents.
     * @path /gallery/{galleryId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /gallery/{galleryId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete fund transaction documents.
     * @path /funds/accounting/transactions/{transactionId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /funds/accounting/transactions/{transactionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to create, read, update, and delete philanthropy activity documents.
     * @path /philanthropy/{activityId}
     * @allow (create, get, list, update, delete)
     * @principle Allows anyone CRUD access
     */
    match /philanthropy/{activityId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}
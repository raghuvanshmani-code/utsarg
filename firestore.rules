/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a tiered security model. User profiles are owner-writeable.
 *   Society metadata is publicly readable but not writeable in this prototyping phase.
 *   Club, volunteer, member, event, gallery, fund transaction, and philanthropy activity data is all world readable.
 *   Write access for clubs, volunteers, members, events, gallery items, fund transactions, and philanthropy is generally disallowed.
 *
 * @dataStructure
 *   /users/{userId} (userProfile): Public profile information for each user.
 *   /society/meta (societyMeta): Singleton document containing metadata about the entire student society.
 *   /clubs/{clubId} (club): Information about individual student clubs.
 *   /volunteers/{volunteerId} (volunteer): Profiles for student volunteers.
 *   /members/{memberId} (member): Profiles for general members.
 *   /events/{eventId} (event): Details about club events.
 *   /gallery/{photoId} (galleryItem): Collection of all media items for the main gallery.
 *   /funds/accounting/transactions/{transactionId} (fundTransaction): Logs all financial transactions.
 *   /philanthropy/{activityId} (philanthropyActivity): Records of philanthropic activities.
 *
 * @keySecurityDecisions
 *   - Users can only read/write their own profile data.
 *   - Listing of users is disallowed.
 *   - All other collections are publicly readable.
 *   - Write access is generally disallowed to all other collections for prototyping purposes.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user123' can create a profile with userId 'user123'.
     * @deny (create) - User with UID 'user456' cannot create a profile with userId 'user123'.
     * @allow (read) - User with UID 'user123' can read their own profile (get, list).
     * @deny (read) - User with UID 'user456' cannot read user 'user123' profile (get, list).
     * @allow (update, delete) - User with UID 'user123' can update/delete their own profile.
     * @deny (update, delete) - User with UID 'user456' cannot update/delete user 'user123' profile.
     * @principle Enforces document ownership for writes and restricts reads to the owner.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Controls access to the society metadata singleton document.
     * @path /society/meta
     * @allow (read) - Any user can read the society metadata.
     * @deny (write) - No user can modify society metadata.
     * @principle Allows public read access but no writes.
     */
    match /society/meta {
      allow get: if true;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to club documents.
     * @path /clubs/{clubId}
     * @allow (read) - Any user can read club information.
     * @deny (write) - No user can create, update, or delete club information (prototyping).
     */
    match /clubs/{clubId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to volunteer documents.
     * @path /volunteers/{volunteerId}
     * @allow (read) - Any user can read volunteer profiles.
     * @deny (write) - No user can create, update, or delete volunteer profiles (prototyping).
     */
    match /volunteers/{volunteerId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to member documents.
     * @path /members/{memberId}
     * @allow (read) - Any user can read member profiles.
     * @deny (write) - No user can create, update, or delete member profiles (prototyping).
     */
    match /members/{memberId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to event documents.
     * @path /events/{eventId}
     * @allow (read) - Any user can read event details.
     * @deny (write) - No user can create, update, or delete event details (prototyping).
     */
    match /events/{eventId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to gallery item documents.
     * @path /gallery/{photoId}
     * @allow (read) - Any user can read gallery items.
     * @deny (write) - No user can create, update, or delete gallery items (prototyping).
     */
    match /gallery/{photoId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to fund transaction documents.
     * @path /funds/accounting/transactions/{transactionId}
     * @allow (read) - Any user can read fund transactions.
     * @deny (write) - No user can create, update, or delete fund transactions (prototyping).
     */
    match /funds/accounting/transactions/{transactionId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to philanthropy activity documents.
     * @path /philanthropy/{activityId}
     * @allow (read) - Any user can read philanthropy activities.
     * @deny (write) - No user can create, update, or delete philanthropy activities (prototyping).
     */
    match /philanthropy/{activityId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) User with matching UID can create their own profile.
     * @allow (get,update,delete) User with matching UID can read, update, or delete their profile.
     * @deny (create) User cannot create a profile with a mismatched UID.
     * @deny (list) User cannot list all user profiles.
     * @deny (update,delete) User cannot update or delete another user's profile.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      function isExistingOwner(userId) {
        return isOwner(userId) && exists(resource);
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId);
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to club documents.
     * @path /clubs/{clubId}
     * @allow (get, list) Any user can read or list clubs.
     * @deny (create, update, delete) No one can create, update, or delete clubs (explicitly denied).
     * @principle Public read access with restricted write access.
     */
    match /clubs/{clubId} {
      allow get, list: if true;
    }

    /**
     * @description Controls access to event documents.
     * @path /events/{eventId}
     * @allow (get, list) Any user can read or list events.
     * @deny (create, update, delete) No one can create, update, or delete events (explicitly denied).
     * @principle Public read access with restricted write access.
     */
    match /events/{eventId} {
      allow get, list: if true;
    }

    /**
     * @description Controls access to gallery item documents.
     * @path /gallery/{galleryId}
     * @allow (get, list) Any user can read or list gallery items.
     * @deny (create, update, delete) No one can create, update, or delete gallery items (explicitly denied).
     * @principle Public read access with restricted write access.
     */
    match /gallery/{galleryId} {
      allow get, list: if true;
    }

    /**
     * @description Controls access to blog post documents.
     * @path /blog/{blogId}
     * @allow (get, list) Any user can read or list blog posts.
     * @deny (create, update, delete) No one can create, update, or delete blog posts (explicitly denied).
     * @principle Public read access with restricted write access.
     */
    match /blog/{blogId} {
      allow get, list: if true;
    }
  }
}
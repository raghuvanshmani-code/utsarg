rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Protects user profiles, allowing only the owner to read and write.
     * @path /users/{userId}
     * @allow (read, write): User with ID 'user123' can read/write their own profile at /users/user123. (create, update, get)
     * @deny (read, write): User with ID 'user456' cannot read/write the profile of user 'user123' at /users/user123.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      function isSignedIn() {
        return request.auth != null;
      }
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Allows public read access to society metadata, but restricts writes.
     * @path /society/meta
     * @allow (read): Any user can read the society metadata.
     * @deny (write): Any user cannot create, update, or delete the society metadata.
     * @principle Provides public information while restricting modifications.
     */
    match /society/meta {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to club information, but restricts writes.
     * @path /clubs/{clubId}
     * @allow (read): Any user can read club information.
     * @deny (write): Any user cannot create, update, or delete club information.
     * @principle Provides public information while restricting modifications.
     */
    match /clubs/{clubId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to volunteer profiles, but restricts writes.
     * @path /volunteers/{volunteerId}
     * @allow (read): Any user can read volunteer profiles.
     * @deny (write): Any user cannot create, update, or delete volunteer profiles.
     * @principle Provides public information while restricting modifications.
     */
    match /volunteers/{volunteerId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to member profiles, but restricts writes.
     * @path /members/{memberId}
     * @allow (read): Any user can read member profiles.
     * @deny (write): Any user cannot create, update, or delete member profiles.
     * @principle Provides public information while restricting modifications.
     */
    match /members/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to event details, but restricts writes.
     * @path /events/{eventId}
     * @allow (read): Any user can read event details.
     * @deny (write): Any user cannot create, update, or delete event details.
     * @principle Provides public information while restricting modifications.
     */
    match /events/{eventId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to gallery media items, but restricts writes.
     * @path /gallery/{galleryId}
     * @allow (read): Any user can read gallery media items.
     * @deny (write): Any user cannot create, update, or delete gallery media items.
     * @principle Provides public information while restricting modifications.
     */
    match /gallery/{galleryId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Restricts access to financial transaction logs.
     * @path /funds/accounting/transactions/{transactionId}
     * @allow (none): No user can read or write financial transaction logs.
     * @principle Protects sensitive financial data from unauthorized access.
     */
    match /funds/accounting/transactions/{transactionId} {
      allow get, list, create, update, delete: if false;
    }

    /**
     * @description Allows public read access to philanthropy activity records, but restricts writes.
     * @path /philanthropy/{activityId}
     * @allow (read): Any user can read philanthropy activity records.
     * @deny (write): Any user cannot create, update, or delete philanthropy activity records.
     * @principle Provides public information while restricting modifications.
     */
    match /philanthropy/{activityId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

       /**
     * @description Allows owner update and delete, but otherwise restricts writes. Public reads.
     * @path /blog/{blogId}
     * @allow (read): Any user can read blog posts.
     * @allow (create): Only the owner can create blog posts, and the author field must match their UID.
     * @allow (update, delete): Only the owner can update or delete blog posts, and the author field must match their UID.
     * @deny (write): Non-owners cannot create, update, or delete blog posts.
     * @principle Restricts writes to owners only.
     */
    match /blog/{blogId} {
      allow get, list: if true;
      allow create: if request.auth.uid != null && request.resource.data.author == request.auth.uid;
      allow update: if request.auth.uid != null && resource.data.author == request.auth.uid;
      allow delete: if request.auth.uid != null && resource.data.author == request.auth.uid;
    }
  }
}
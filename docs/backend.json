
{
  "entities": {
    "user": {
      "title": "User",
      "description": "Represents a user in the system.",
      "type": "object",
      "properties": {
        "uid": { "type": "string", "description": "The user's unique ID from Firebase Authentication." },
        "name": { "type": "string", "description": "The user's full name." },
        "email": { "type": "string", "format": "email", "description": "The user's email address." },
        "role": { "type": "string", "enum": ["student", "admin", "club_leader"], "description": "The user's role." },
        "joinedClubs": { "type": "array", "items": { "type": "string" }, "description": "An array of club IDs that the user has joined." },
        "profilePicURL": { "type": "string", "format": "uri", "description": "URL of the user's profile picture." },
        "createdAt": { "type": "string", "format": "date-time", "description": "The timestamp when the user account was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the user account was last updated." }
      },
      "required": ["uid", "name", "email", "role"]
    },
    "club": {
      "title": "Club",
      "description": "Represents a student club.",
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "The name of the club." },
        "description": { "type": "string", "description": "A brief description of the club." },
        "logo": { "type": "string", "format": "uri", "description": "URL of the club's logo." },
        "bannerImage": { "type": "string", "format": "uri", "description": "URL of the club's banner image." },
        "events": { "type": "array", "items": { "type": "string" }, "description": "An array of event IDs organized by the club." },
        "genres": { "type": "array", "items": { "type": "string" }, "description": "An array of genres associated with the club." },
        "coreVolunteers": { "type": "array", "items": { "type": "string" }, "description": "An array of user IDs for core volunteers." },
        "membersCount": { "type": "number", "description": "The number of members in the club." },
        "requirements": { "type": "object", "description": "Requirements for the club (startup, per-event, maintenance)." },
        "budgetEstimatePerEvent": { "type": "number", "description": "Estimated budget per event." },
        "createdAt": { "type": "string", "format": "date-time", "description": "The timestamp when the club was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the club was last updated." }
      },
      "required": ["name", "description"]
    },
    "event": {
      "title": "Event",
      "description": "Represents a club event.",
      "type": "object",
      "properties": {
        "title": { "type": "string", "description": "The title of the event." },
        "description": { "type": "string", "description": "A detailed description of the event." },
        "date": { "type": "string", "format": "date-time", "description": "The date and time of the event." },
        "clubId": { "type": ["string", "null"], "description": "The ID of the club organizing the event, or null." },
        "bannerImage": { "type": "string", "format": "uri", "description": "URL for the event's banner image." },
        "mediaURLs": { "type": "array", "items": { "type": "string", "format": "uri" }, "description": "An array of URLs for media associated with the event." },
        "recurring": { "type": "object", "description": "Details about the event's recurring schedule (e.g., { type: 'daily', time: '18:00' })." },
        "createdAt": { "type": "string", "format": "date-time", "description": "The timestamp when the event was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the event was last updated." }
      },
      "required": ["title", "description", "date", "clubId"]
    },
    "galleryItem": {
      "title": "Gallery Item",
      "description": "Represents a media item in the gallery.",
      "type": "object",
      "properties": {
        "title": { "type": "string", "description": "The title or caption for the media item." },
        "type": { "type": "string", "enum": ["image", "video"], "description": "The type of media." },
        "mediaURL": { "type": "string", "format": "uri", "description": "The URL of the media." },
        "clubId": { "type": ["string", "null"], "description": "Optional ID of the club associated with this media." },
        "eventId": { "type": "string", "description": "Optional ID of the event associated with this media." },
        "uploadedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the gallery item was uploaded." },
        "createdAt": { "type": "string", "format": "date-time", "description": "The timestamp when the gallery item was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the gallery item was last updated." }
      },
      "required": ["title", "type", "mediaURL", "uploadedAt"]
    },
    "blogPost": {
      "title": "Blog Post",
      "description": "Represents a blog or news post.",
      "type": "object",
      "properties": {
        "title": { "type": "string", "description": "The title of the blog post." },
        "summary": { "type": "string", "description": "A short summary of the blog post." },
        "author": { "type": "string", "description": "The name of the post's author." },
        "date": { "type": "string", "format": "date-time", "description": "The publication date of the post." },
        "thumbnail": { "type": "string", "format": "uri", "description": "URL for the post's thumbnail image." },
        "bannerImage": { "type": "string", "format": "uri", "description": "URL for the post's main banner image." },
        "content": { "type": "string", "description": "The HTML content of the blog post." },
        "createdAt": { "type": "string", "format": "date-time", "description": "The timestamp when the blog post was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the blog post was last updated." }
      },
      "required": ["title", "summary", "author", "date", "content"]
    },
    "upload": {
      "title": "Upload",
      "description": "Metadata for a file uploaded to a CDN.",
      "type": "object",
      "properties": {
        "secure_url": { "type": "string", "format": "uri", "description": "The secure HTTPS URL for the uploaded file." },
        "public_id": { "type": "string", "description": "The unique identifier for the asset in the CDN." },
        "uploadedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the file was uploaded." },
        "createdAt": { "type": "string", "format": "date-time", "description": "The timestamp when the record was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "The timestamp when the record was last updated." }
      },
      "required": ["secure_url", "public_id", "uploadedAt"]
    },
    "seed": {
        "title": "Seed Log",
        "description": "An audit log entry for a database seed operation.",
        "type": "object",
        "properties": {
            "runBy": { "type": "string", "description": "The UID of the admin who ran the seed." },
            "runAt": { "type": "string", "format": "date-time", "description": "The timestamp of the seed operation." },
            "collectionsSeeded": { "type": "array", "items": { "type": "string" }, "description": "The names of the collections that were seeded." },
            "report": {
                "type": "object",
                "properties": {
                    "successCount": { "type": "number" },
                    "failedCount": { "type": "number" },
                    "errors": { "type": "array" }
                }
            }
        },
        "required": ["runBy", "runAt", "collectionsSeeded", "report"]
    }
  },
  "auth": { "providers": ["google.com", "password"] },
  "firestore": {
    "/users/{userId}": { "schema": { "$ref": "#/entities/user" }, "description": "Stores public profiles for all users." },
    "/clubs/{clubId}": { "schema": { "$ref": "#/entities/club" }, "description": "Stores information about student clubs." },
    "/events/{eventId}": { "schema": { "$ref": "#/entities/event" }, "description": "Stores details about upcoming and past events." },
    "/gallery/{galleryId}": { "schema": { "$ref": "#/entities/galleryItem" }, "description": "Collection of all media items for the gallery." },
    "/blog/{blogId}": { "schema": { "$ref": "#/entities/blogPost" }, "description": "Stores blog posts and news articles." },
    "/uploads/{uploadId}": { "schema": { "$ref": "#/entities/upload" }, "description": "Stores metadata about files uploaded to a CDN." },
    "/seeds/{seedId}": { "schema": { "$ref": "#/entities/seed" }, "description": "Audit log for database seed operations." }
  }
}
